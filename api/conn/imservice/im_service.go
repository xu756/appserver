// Code generated by goctl. DO NOT EDIT.
// Source: conn.proto

package imservice

import (
	"context"

	"github.com/xu756/appserver/api/conn/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ImData = pb.ImData
	ImResp = pb.ImResp

	ImService interface {
		// 其他服务调用发送消息
		Send(ctx context.Context, in *ImData, opts ...grpc.CallOption) (*ImResp, error)
		// 其他服务调用广播消息
		Broadcast(ctx context.Context, in *ImData, opts ...grpc.CallOption) (*ImResp, error)
	}

	defaultImService struct {
		cli zrpc.Client
	}
)

func NewImService(cli zrpc.Client) ImService {
	return &defaultImService{
		cli: cli,
	}
}

// 其他服务调用发送消息
func (m *defaultImService) Send(ctx context.Context, in *ImData, opts ...grpc.CallOption) (*ImResp, error) {
	client := pb.NewImServiceClient(m.cli.Conn())
	return client.Send(ctx, in, opts...)
}

// 其他服务调用广播消息
func (m *defaultImService) Broadcast(ctx context.Context, in *ImData, opts ...grpc.CallOption) (*ImResp, error) {
	client := pb.NewImServiceClient(m.cli.Conn())
	return client.Broadcast(ctx, in, opts...)
}
