// Code generated by goctl. DO NOT EDIT.
// Source: login.proto

package loginrpc

import (
	"context"

	"github.com/xu756/appserver/app/login/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginReq    = pb.LoginReq
	LoginResp   = pb.LoginResp
	MiniAuthReq = pb.MiniAuthReq

	LoginRpc interface {
		MiniLoginByMobile(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
		MiniLoginByAuth(ctx context.Context, in *MiniAuthReq, opts ...grpc.CallOption) (*LoginResp, error)
	}

	defaultLoginRpc struct {
		cli zrpc.Client
	}
)

func NewLoginRpc(cli zrpc.Client) LoginRpc {
	return &defaultLoginRpc{
		cli: cli,
	}
}

func (m *defaultLoginRpc) MiniLoginByMobile(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := pb.NewLoginRpcClient(m.cli.Conn())
	return client.MiniLoginByMobile(ctx, in, opts...)
}

func (m *defaultLoginRpc) MiniLoginByAuth(ctx context.Context, in *MiniAuthReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := pb.NewLoginRpcClient(m.cli.Conn())
	return client.MiniLoginByAuth(ctx, in, opts...)
}
