// Code generated by goctl. DO NOT EDIT.
// Source: login.proto

package server

import (
	"context"

	"github.com/xu756/appserver/app/login/internal/logic"
	"github.com/xu756/appserver/app/login/internal/svc"
	"github.com/xu756/appserver/app/login/pb"
)

type LoginRpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedLoginRpcServer
}

func NewLoginRpcServer(svcCtx *svc.ServiceContext) *LoginRpcServer {
	return &LoginRpcServer{
		svcCtx: svcCtx,
	}
}

// 手机号登录
func (s *LoginRpcServer) MiniLoginByMobile(ctx context.Context, in *pb.LoginReq) (*pb.LoginResp, error) {
	l := logic.NewMiniLoginByMobileLogic(ctx, s.svcCtx)
	return l.MiniLoginByMobile(in)
}

// 小程序登录
func (s *LoginRpcServer) MiniLoginByAuth(ctx context.Context, in *pb.MiniAuthReq) (*pb.LoginResp, error) {
	l := logic.NewMiniLoginByAuthLogic(ctx, s.svcCtx)
	return l.MiniLoginByAuth(in)
}

// 图形验证码
func (s *LoginRpcServer) GetCaptcha(ctx context.Context, in *pb.Empty) (*pb.CaptchaResp, error) {
	l := logic.NewGetCaptchaLogic(ctx, s.svcCtx)
	return l.GetCaptcha(in)
}

// 验证码比对
func (s *LoginRpcServer) CaptchaCompare(ctx context.Context, in *pb.CaptchaCheckReq) (*pb.CaptchaCheckResp, error) {
	l := logic.NewCaptchaCompareLogic(ctx, s.svcCtx)
	return l.CaptchaCompare(in)
}

// 密码登录
func (s *LoginRpcServer) LoginByPassword(ctx context.Context, in *pb.PasswordLoginReq) (*pb.LoginResp, error) {
	l := logic.NewLoginByPasswordLogic(ctx, s.svcCtx)
	return l.LoginByPassword(in)
}

// 注册
func (s *LoginRpcServer) UserRegister(ctx context.Context, in *pb.Register) (*pb.LoginResp, error) {
	l := logic.NewUserRegisterLogic(ctx, s.svcCtx)
	return l.UserRegister(in)
}

// 发送短信验证码
func (s *LoginRpcServer) SendSms(ctx context.Context, in *pb.SendSmsReq) (*pb.SendSmsResp, error) {
	l := logic.NewSendSmsLogic(ctx, s.svcCtx)
	return l.SendSms(in)
}

// 验证短信验证码
func (s *LoginRpcServer) CheckSms(ctx context.Context, in *pb.CheckSmsReq) (*pb.CaptchaCheckResp, error) {
	l := logic.NewCheckSmsLogic(ctx, s.svcCtx)
	return l.CheckSms(in)
}
